version: '3.8'

services:
  backend:
    build:
      context: /home/ubuntu/apps/video-summary/backend
      dockerfile: ${PWD}/backend.Dockerfile
    container_name: video-summary-backend
    restart: unless-stopped
    env_file: 
      - .env
    expose:
      - 5000
    networks:
      - app_network
    user: node
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: /home/ubuntu/apps/video-summary/frontend
      dockerfile: ${PWD}/frontend.Dockerfile
    container_name: video-summary-frontend
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - app_network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:1.25-alpine
    container_name: video-summary-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      backend:
        condition: service_healthy
      frontend:
        condition: service_healthy
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app_network:
    driver: bridge 