name: Frontend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
      - 'docker-compose.yml'
      - 'nginx/nginx.conf'
      - 'apps.yaml'
      - 'setup-vm.sh'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Create .env file
        run: |
          cat << EOF > frontend/.env
          # API Configuration
          NEXT_PUBLIC_API_URL=${{ secrets.FRONTEND_API_URL }}
          
          # Azure Storage Configuration
          NEXT_PUBLIC_AZURE_STORAGE_ACCOUNT_NAME=${{ secrets.FRONTEND_AZURE_STORAGE_ACCOUNT_NAME }}
          NEXT_PUBLIC_AZURE_STORAGE_CONTAINER_NAME=${{ secrets.FRONTEND_AZURE_STORAGE_CONTAINER_NAME }}
          NEXT_PUBLIC_AZURE_STORAGE_SAS_TOKEN=${{ secrets.FRONTEND_AZURE_STORAGE_SAS_TOKEN }}
          
          # App Configuration
          NEXT_PUBLIC_MAX_FILE_SIZE=${{ secrets.FRONTEND_MAX_FILE_SIZE }}
          NEXT_PUBLIC_MAX_LOCAL_FILESIZE=${{ secrets.FRONTEND_MAX_LOCAL_FILESIZE }}
          
          # Optional - YouTube API Configuration
          GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
          EOF
        env:
          FRONTEND_API_URL: ${{ secrets.FRONTEND_API_URL }}
          FRONTEND_AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.FRONTEND_AZURE_STORAGE_ACCOUNT_NAME }}
          FRONTEND_AZURE_STORAGE_CONTAINER_NAME: ${{ secrets.FRONTEND_AZURE_STORAGE_CONTAINER_NAME }}
          FRONTEND_AZURE_STORAGE_SAS_TOKEN: ${{ secrets.FRONTEND_AZURE_STORAGE_SAS_TOKEN }}
          FRONTEND_MAX_FILE_SIZE: ${{ secrets.FRONTEND_MAX_FILE_SIZE }}
          FRONTEND_MAX_LOCAL_FILESIZE: ${{ secrets.FRONTEND_MAX_LOCAL_FILESIZE }}
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Update deployment repository
            cd /home/ubuntu/apps/deployment
            git pull
            
            # Get frontend path from apps.yaml
            FRONTEND_PATH=$(yq e '.groups.video-summary.base_path' apps.yaml)/frontend
            
            # Update frontend repository
            cd $FRONTEND_PATH
            git pull
            
            # Deploy using docker compose
            cd /home/ubuntu/apps/deployment
            docker compose -f docker-compose.yml up -d --build frontend nginx 