user nginx;
worker_processes auto;
pid /var/run/nginx.pid;

# Optimize for production
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 100m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # MIME Types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main buffer=512k flush=1m;
    error_log /var/log/nginx/error.log warn;

    # Gzip Settings - Enhanced for production
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Rate limiting zones - Production settings
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=static_limit:10m rate=10r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), screen-wake-lock=(), web-share=()" always;

    # Error pages
    error_page 429 /errors/429.html;
    error_page 404 /errors/404.html;
    error_page 500 502 503 504 /errors/50x.html;

    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name _;
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirect everything else to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Main HTTPS server
    server {
        listen 443 ssl http2;
        server_name YOUR_DOMAIN_HERE;  # Replace with your actual domain

        # SSL certificates - Replace with your domain
        ssl_certificate /etc/letsencrypt/live/YOUR_DOMAIN_HERE/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAIN_HERE/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/YOUR_DOMAIN_HERE/chain.pem;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # Content Security Policy
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; media-src 'self'; object-src 'none'; child-src 'none'; form-action 'self'; base-uri 'self'; manifest-src 'self';" always;

        # Connection limits
        limit_conn conn_limit 50;

        # Health check endpoint (no rate limiting)
        location = /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'healthy\n';
        }

        # Error pages
        location ^~ /errors/ {
            internal;
            alias /usr/share/nginx/html/errors/;
        }

        # API endpoints with stricter rate limiting
        location /api/auth {
            proxy_pass http://backend:5050;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Strict rate limiting for auth endpoints
            limit_req zone=auth_limit burst=3 nodelay;
            limit_req_status 429;
        }

        # API endpoints
        location /api {
            proxy_pass http://backend:5050;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Rate limiting for API
            limit_req zone=api_limit burst=10 nodelay;
            limit_req_status 429;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;  # Longer for video processing
        }

        # Frontend (when enabled)
        location / {
            # For now, show maintenance page or API documentation
            add_header Content-Type text/html;
            return 200 '
<!DOCTYPE html>
<html>
<head>
    <title>Video Summary API - Production</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body { 
            font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif; 
            margin: 0; padding: 40px; background: #f8f9fa; color: #333;
        }
        .container { max-width: 800px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
        .status { color: #28a745; font-weight: bold; }
        .endpoint { background: #f8f9fa; padding: 20px; margin: 15px 0; border-radius: 5px; border-left: 4px solid #007bff; }
        .method { color: #007bff; font-weight: bold; font-family: monospace; }
        .url { color: #28a745; font-family: monospace; background: #f1f3f4; padding: 2px 6px; border-radius: 3px; }
        .warning { background: #fff3cd; border-left: 4px solid #ffc107; padding: 15px; margin: 20px 0; border-radius: 4px; }
        h1 { color: #007bff; margin-bottom: 10px; }
        h2 { color: #495057; margin-top: 30px; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üé¨ Video Summary API</h1>
        <p><span class="status">‚úÖ Production API is running securely</span></p>
        
        <div class="warning">
            <strong>‚ö†Ô∏è Production Environment</strong><br>
            This is a production API server. All requests are logged and monitored.
        </div>
        
        <h2>Available Endpoints:</h2>
        
        <div class="endpoint">
            <div><span class="method">GET</span> <span class="url">/health</span></div>
            <div>System health check</div>
        </div>
        
        <div class="endpoint">
            <div><span class="method">POST</span> <span class="url">/api/summary/youtube/streaming/summary</span></div>
            <div>YouTube video summarization API</div>
        </div>
        
        <h2>Security Features:</h2>
        <ul>
            <li>‚úÖ HTTPS/TLS encryption</li>
            <li>‚úÖ Rate limiting protection</li>
            <li>‚úÖ Security headers</li>
            <li>‚úÖ Content Security Policy</li>
            <li>‚úÖ Request logging</li>
        </ul>
        
        <h2>API Documentation:</h2>
        <p>For detailed API documentation, please refer to the official documentation or contact the system administrator.</p>
        
        <hr style="margin: 30px 0; border: none; border-top: 1px solid #dee2e6;">
        <small style="color: #6c757d;">
            Server: Nginx + Node.js | Environment: Production | SSL: Let\'s Encrypt
        </small>
    </div>
</body>
</html>';
            
            # Rate limiting for frontend
            limit_req zone=static_limit burst=20 nodelay;
            limit_req_status 429;
        }

        # Block common attack patterns
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Robots.txt
        location = /robots.txt {
            add_header Content-Type text/plain;
            return 200 "User-agent: *\nDisallow: /api/\nDisallow: /admin/\n";
        }
    }
} 