user nginx;
worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Timeout Settings
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;
    send_timeout 300s;

    # MIME Types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
    error_log /var/log/nginx/error.log warn;

    # Gzip Settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static_limit:10m rate=100r/s;

    # Error pages
    error_page 429 /429.html;
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    # HTTP Server (for local development/testing)
    server {
        listen 80;
        server_name localhost *.local;

        # Security headers (relaxed for development)
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'" always;

        # Health check endpoint
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 'healthy\n';
        }

        # Error pages
        location = /429.html {
            internal;
            add_header Content-Type text/html;
            return 429 '<!DOCTYPE html><html><head><title>429 Too Many Requests</title></head><body><h1>429 Too Many Requests</h1><p>Please try again later.</p></body></html>';
        }

        location = /404.html {
            internal;
            add_header Content-Type text/html;
            return 404 '<!DOCTYPE html><html><head><title>404 Not Found</title></head><body><h1>404 Not Found</h1><p>The requested resource was not found.</p></body></html>';
        }

        location = /50x.html {
            internal;
            add_header Content-Type text/html;
            return 500 '<!DOCTYPE html><html><head><title>500 Internal Server Error</title></head><body><h1>500 Internal Server Error</h1><p>An error occurred while processing your request.</p></body></html>';
        }

        # Backend API
        location /api {
            proxy_pass http://backend:5050;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Rate limiting for API (relaxed for development)
            limit_req zone=api_limit burst=20 nodelay;
            limit_req_status 429;

            # Timeouts for video processing
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            send_timeout 300s;
        }

        # Specific configuration for streaming endpoints
        location /api/summary/youtube/streaming {
            proxy_pass http://backend:5050;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Longer timeouts for streaming
            proxy_connect_timeout 600s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
            send_timeout 600s;

            # Buffer settings for streaming
            proxy_buffering off;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;

            # Rate limiting (relaxed for development)
            limit_req zone=api_limit burst=20 nodelay;
            limit_req_status 429;
        }

        # Frontend (commented out since frontend service is disabled)
        # location / {
        #     proxy_pass http://frontend:3000;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade $http_upgrade;
        #     proxy_set_header Connection 'upgrade';
        #     proxy_set_header Host $host;
        #     proxy_cache_bypass $http_upgrade;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # 
        #     # Rate limiting for static content
        #     limit_req zone=static_limit burst=100 nodelay;
        #     limit_req_status 429;
        # }

        # API Documentation and Testing Interface
        location / {
            add_header Content-Type text/html;
            return 200 '
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>Video Summary API - Development</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; }
        .endpoint { background: #f5f5f5; padding: 15px; margin: 10px 0; border-radius: 5px; }
        .method { color: #007bff; font-weight: bold; }
        .url { color: #28a745; font-family: monospace; }
        .status { color: #28a745; font-weight: bold; }
    </style>
</head>
<body>
    <h1>Video Summary API</h1>
    <p><span class="status">Backend is running!</span></p>
    
    <h2>Available Endpoints:</h2>
    
    <div class="endpoint">
        <div><span class="method">GET</span> <span class="url">/health</span></div>
        <div>Health check endpoint</div>
    </div>
    
    <div class="endpoint">
        <div><span class="method">GET</span> <span class="url">/api/health</span></div>
        <div>Backend health check</div>
    </div>
    
    <div class="endpoint">
        <div><span class="method">POST</span> <span class="url">/api/summary/youtube/streaming/summary</span></div>
        <div>YouTube video summarization (streaming)</div>
        <div>Query parameter: <code>url=https://youtube.com/watch?v=...</code></div>
    </div>
    
    <h2>Test Commands:</h2>
    <pre>
# Health check
curl http://localhost/health

# Backend health check  
curl http://localhost/api/health

# Test YouTube summary (replace with actual YouTube URL)
curl "http://localhost/api/summary/youtube/streaming/summary?url=https://www.youtube.com/watch?v=dQw4w9WgXcQ"
    </pre>
    
    <h2>Development Info:</h2>
    <ul>
        <li>Environment: Development/Testing</li>
        <li>Nginx: Running</li>
        <li>Backend: Running on port 5050</li>
        <li>Frontend: Disabled for testing</li>
    </ul>
</body>
</html>';
        }
    }
} 