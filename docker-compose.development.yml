version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    env_file: ./backend/.env
    ports:
      - "5050:5050"
    volumes:
      - ./backend/data:/app/data
    networks:
      - video-summary-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "sh", "-c", "if command -v curl >/dev/null 2>&1; then curl -f http://localhost:5050/health; else wget -q --spider http://localhost:5050/health; fi"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# Comment out the frontend service block
#  frontend:
#    build:
#      context: ./frontend
#      dockerfile: Dockerfile
#    env_file: ./frontend/.env
#    environment:
#      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
#      - NEXT_PUBLIC_AZURE_STORAGE_ACCOUNT_NAME=${NEXT_PUBLIC_AZURE_STORAGE_ACCOUNT_NAME}
#      - NEXT_PUBLIC_AZURE_STORAGE_CONTAINER_NAME=${NEXT_PUBLIC_AZURE_STORAGE_CONTAINER_NAME}
#      - NEXT_PUBLIC_AZURE_STORAGE_SAS_TOKEN=${NEXT_PUBLIC_AZURE_STORAGE_SAS_TOKEN}
#      - NEXT_PUBLIC_MAX_FILE_SIZE=${NEXT_PUBLIC_MAX_FILE_SIZE}
#      - NEXT_PUBLIC_MAX_LOCAL_FILESIZE=${NEXT_PUBLIC_MAX_LOCAL_FILESIZE}
#    ports:
#      - "3000:3000"
#    volumes:
#      - ./frontend:/app
#      - /app/node_modules
#    networks:
#      - video-summary-network
#    deploy:
#      resources:
#        limits:
#          cpus: '0.5'
#          memory: 512M
#        reservations:
#          cpus: '0.2'
#          memory: 256M
#    healthcheck:
#      test: ["CMD", "sh", "-c", "if command -v curl >/dev/null 2>&1; then curl -f http://localhost:3000; else wget -q --spider http://localhost:3000; fi"]
#      interval: 30s
#      timeout: 10s
#      retries: 3
#    restart: unless-stopped
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "10m"
#        max-file: "3"

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      # Commented out HTTPS port for local testing
      # - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # Commented out SSL volumes for local testing
      # - ./nginx/certbot/conf:/etc/letsencrypt
      # - ./nginx/certbot/www:/var/www/certbot
    networks:
      - video-summary-network
    depends_on:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.2'
          memory: 128M
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  video-summary-network:
    driver: bridge 